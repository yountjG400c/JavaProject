package com.ohio.ofcc.homework.calc.impl;

import static org.junit.Assert.*;

import java.util.HashMap;
import java.util.Map;

import com.ohio.ofcc.homework.calc.impl.FeeCalculatorImpl;

import org.junit.Test;

public class CalculateFeeTestUseCase1 {

	@Test
	public void testCalculateFeeCase1() {
		FeeCalculatorImpl feeCalculatorImpl = new FeeCalculatorImpl();
		feeCalculatorImpl.calculateFee(250000, 1);
	}

	@Test
	public void testCalculateFeeCase2Float() {
		FeeCalculatorImpl feeCalculatorImpl = new FeeCalculatorImpl();
		feeCalculatorImpl.calculateFee(750000, 2);
	}

	@Test
	public void testCalculateFeeCase2FloatMapOfIntegerInteger() {
		Map<Integer, Integer> arbCritMap = new HashMap<Integer, Integer>();
		
		// UseCase #3: Parameters are Invoice Amount, Monetary Ranges, Percentage Ranges & Use Case Number...
		// Passing in $150000 as the bottom monetary range, 25 as the percentage rate, putting this key-value pair into the map:
		arbCritMap.put(150000, 25);
		// Passing in $550000 as the middle monetary range, 15 as the percentage rate, putting this key-value pair into the map:
		arbCritMap.put(550000, 15);
		// Passing in $750000 as the top monetary range, 10 as the percentage rate, putting this key-value pair into the map:
		arbCritMap.put(750000, 10);
		
		FeeCalculatorImpl feeCalculatorImpl = new FeeCalculatorImpl();
		feeCalculatorImpl.calculateFee(900000, 3, arbCritMap);
	}

	@Test
	public void testCalculateFeeCase4() {
		FeeCalculatorImpl feeCalculatorImpl = new FeeCalculatorImpl();
		feeCalculatorImpl.calculateFee(250000, 4, 600000);
	}

}
